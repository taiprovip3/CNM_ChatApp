{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { AuthContext } from \"../provider/AuthProvider\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar socket = io.connect(\"http://localhost:4000\");\nexport default function ChatScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _React$useContext = React.useContext(AuthContext),\n      _React$useContext$cur = _React$useContext.currentUser,\n      displayName = _React$useContext$cur.displayName,\n      email = _React$useContext$cur.email,\n      photoURL = _React$useContext$cur.photoURL;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var id = route.params.id;\n  var name = route.params.name;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messageList = _useState4[0],\n      setMessageList = _useState4[1];\n\n  var joinRoomChatSimple = function joinRoomChatSimple() {\n    socket.emit(\"join_room\", name);\n  };\n\n  var sendMessage = function sendMessage() {\n    if (currentMessage != \"\") {\n      var objectMessage = {\n        room: name,\n        author: email,\n        message: currentMessage,\n        time: new Date(Date.now()).getTime()\n      };\n      socket.emit(\"send_message\", objectMessage);\n      setMessageList(function (list) {\n        return [].concat(_toConsumableArray(list), [objectMessage]);\n      });\n    }\n  };\n\n  useEffect(function () {\n    socket.on(\"receive_message\", function (data) {\n      setMessageList(function (list) {\n        return [].concat(_toConsumableArray(list), [data]);\n      });\n    });\n  }, [socket]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"Room: \", name]\n      }), _jsx(Button, {\n        onPress: joinRoomChatSimple,\n        title: \"Join room\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'lightgrey',\n        width: '100%'\n      },\n      children: messageList.map(function (msgObject) {\n        return _jsx(Text, {\n          children: msgObject.message\n        }, email === msgObject.email ? Math.random() : Math.random());\n      })\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter message...\",\n        onChangeText: function onChangeText(e) {\n          return setCurrentMessage(e);\n        },\n        value: currentMessage\n      }), _jsx(Button, {\n        title: \"Send message\",\n        onPress: sendMessage\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","io","AuthContext","socket","connect","ChatScreen","route","navigation","currentUser","displayName","email","photoURL","currentMessage","setCurrentMessage","id","params","name","messageList","setMessageList","joinRoomChatSimple","emit","sendMessage","objectMessage","room","author","message","time","Date","now","getTime","list","on","data","flex","alignItems","backgroundColor","width","map","msgObject","Math","random","flexDirection","e"],"sources":["F:/Hoc ki 4/Cong nghe moi/AppChat/client/Components/screen/ChatScreen.js"],"sourcesContent":["import { View, Text, Button, TextInput } from 'react-native'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { io } from 'socket.io-client';\r\nimport { AuthContext } from '../provider/AuthProvider';\r\n\r\nconst socket = io.connect(\"http://localhost:4000\");\r\n\r\nexport default function ChatScreen({ route, navigation }) {\r\n\r\n    const { currentUser:{\r\n        displayName,\r\n        email,\r\n        photoURL\r\n    } } = React.useContext(AuthContext);\r\n    const [currentMessage, setCurrentMessage] = useState('');\r\n    const { id } = route.params;\r\n    const { name } = route.params;\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    //Join room\r\n    const joinRoomChatSimple = () => {\r\n        socket.emit(\"join_room\", name);\r\n    }\r\n\r\n    //Send message\r\n    const sendMessage = () => {\r\n        if(currentMessage != \"\") {\r\n            const objectMessage = {\r\n                room: name,\r\n                author: email,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getTime()\r\n            }\r\n            socket.emit(\"send_message\", objectMessage);\r\n            setMessageList((list) => [...list, objectMessage]);\r\n        }\r\n    }\r\n\r\n    //Listening message\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            setMessageList((list) => [...list, data]);\r\n        });\r\n    }, [socket]);\r\n    \r\n\r\n  return (\r\n    <View style={{flex:1, alignItems:'center'}}>\r\n      <View>\r\n        <Text>Room: {name}</Text>\r\n        <Button onPress={joinRoomChatSimple} title='Join room' />\r\n      </View>\r\n      <View style={{flex:1,backgroundColor:'lightgrey', width:'100%'}}>\r\n        {messageList.map((msgObject) => {\r\n            return <Text key={email === msgObject.email ? Math.random() : Math.random()}>{msgObject.message}</Text>;\r\n        })}\r\n      </View>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextInput placeholder='Enter message...' onChangeText={(e) => setCurrentMessage(e)} value={currentMessage} />\r\n        <Button title='Send message' onPress={sendMessage}/>\r\n      </View>\r\n    </View>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}