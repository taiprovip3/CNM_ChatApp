{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useEffect, useState } from 'react';\nimport app from \"../../firebase\";\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar auth = getAuth(app);\nexport var AuthContext = React.createContext();\nexport default function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUser = _useState4[0],\n      setCurrentUser = _useState4[1];\n\n  useEffect(function () {\n    onAuthStateChanged(auth, function (user) {\n      setCurrentUser(user);\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    toast.loading('Loading...');\n    return _jsx(Toaster, {});\n  }\n\n  return _jsx(AuthContext.Provider, {\n    value: {\n      currentUser: currentUser\n    },\n    children: children\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","app","getAuth","onAuthStateChanged","auth","AuthContext","createContext","AuthProvider","children","loading","setLoading","currentUser","setCurrentUser","user","toast"],"sources":["F:/Hoc ki 4/Cong nghe moi/AppChat/client/components/provider/AuthProvider.js"],"sourcesContent":["import { View, Text } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport app from '../../firebase';\r\nimport {getAuth, onAuthStateChanged} from 'firebase/auth';\r\n\r\n//import {} from '';\r\n\r\nconst auth = getAuth(app);\r\nexport const AuthContext = React.createContext();\r\nexport default function AuthProvider({ children }) {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentUser, setCurrentUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n    onAuthStateChanged(auth, (user) => {\r\n        setCurrentUser(user);\r\n        setLoading(false);\r\n    });\r\n    }, []);\r\n\r\n    if(loading){\r\n        toast.loading('Loading...');\r\n        return <Toaster />\r\n    }\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser }}>  \r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,GAAP;AACA,SAAQC,OAAR,EAAiBC,kBAAjB,QAA0C,eAA1C;;AAIA,IAAMC,IAAI,GAAGF,OAAO,CAACD,GAAD,CAApB;AACA,OAAO,IAAMI,WAAW,GAAGP,KAAK,CAACQ,aAAN,EAApB;AACP,eAAe,SAASC,YAAT,OAAoC;EAAA,IAAZC,QAAY,QAAZA,QAAY;;EAE/C,gBAA8BR,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOS,OAAP;EAAA,IAAgBC,UAAhB;;EACA,iBAAsCV,QAAQ,CAAC,IAAD,CAA9C;EAAA;EAAA,IAAOW,WAAP;EAAA,IAAoBC,cAApB;;EAEAb,SAAS,CAAC,YAAM;IAChBI,kBAAkB,CAACC,IAAD,EAAO,UAACS,IAAD,EAAU;MAC/BD,cAAc,CAACC,IAAD,CAAd;MACAH,UAAU,CAAC,KAAD,CAAV;IACH,CAHiB,CAAlB;EAIC,CALQ,EAKN,EALM,CAAT;;EAOA,IAAGD,OAAH,EAAW;IACPK,KAAK,CAACL,OAAN,CAAc,YAAd;IACA,OAAO,KAAC,OAAD,KAAP;EACH;;EACH,OACE,KAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEE,WAAW,EAAXA;IAAF,CAA7B;IAAA,UACGH;EADH,EADF;AAKD"},"metadata":{},"sourceType":"module"}