{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar socket = io.connect(\"http://localhost:4000\");\nexport default function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var username = 'taiproduaxe';\n  var room = 'templeRoom';\n\n  var sendMessage = function sendMessage() {\n    var objectMessage;\n    return _regeneratorRuntime.async(function sendMessage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(currentMessage != \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            objectMessage = {\n              room: room,\n              author: username,\n              message: currentMessage,\n              time: new Date(Date.now()).getTime()\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(socket.emit(\"send_message\", objectMessage));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var joinRoomChatSimple = function joinRoomChatSimple() {\n    alert(socket);\n    socket.emit(\"join_room\", room);\n  };\n\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"Room: \", room]\n      }), _jsx(Button, {\n        onPress: joinRoomChatSimple,\n        title: \"Join room\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'lightgrey',\n        width: '100%'\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter message...\",\n        onChangeText: function onChangeText(e) {\n          return setCurrentMessage(e);\n        },\n        value: currentMessage\n      }), _jsx(Button, {\n        title: \"Send message\",\n        onPress: sendMessage\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","io","socket","connect","ChatScreen","navigation","currentMessage","setCurrentMessage","username","room","sendMessage","objectMessage","author","message","time","Date","now","getTime","emit","joinRoomChatSimple","alert","flex","alignItems","backgroundColor","width","flexDirection","e"],"sources":["F:/Hoc ki 4/Cong nghe moi/AppChat/client/Components/screen/ChatScreen.js"],"sourcesContent":["import { View, Text, Button, TextInput } from 'react-native'\r\nimport React, { useState } from 'react'\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io.connect(\"http://localhost:4000\");\r\n\r\nexport default function ChatScreen({ navigation }) {\r\n\r\n    const [currentMessage, setCurrentMessage] = useState('');\r\n    \r\n    const username = 'taiproduaxe';\r\n    const room = 'templeRoom';\r\n\r\n    const sendMessage = async () => {\r\n        if(currentMessage != \"\"){\r\n            const objectMessage = {\r\n                room: room,\r\n                author: username,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getTime(),\r\n            }\r\n            await socket.emit(\"send_message\", objectMessage);\r\n        }\r\n    }\r\n\r\n    const joinRoomChatSimple = () => {\r\n        alert(socket);\r\n        socket.emit(\"join_room\", room);\r\n    }\r\n  return (\r\n    <View style={{flex:1, alignItems:'center'}}>\r\n      <View>\r\n        <Text>Room: {room}</Text>\r\n        <Button onPress={joinRoomChatSimple} title='Join room' />\r\n      </View>\r\n      <View style={{flex:1,backgroundColor:'lightgrey', width:'100%'}}>\r\n      </View>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextInput placeholder='Enter message...' onChangeText={(e) => setCurrentMessage(e)} value={currentMessage} />\r\n        <Button title='Send message' onPress={sendMessage}/>\r\n      </View>\r\n    </View>\r\n  )\r\n}"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;AAEA,eAAe,SAASC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAE/C,gBAA4CL,QAAQ,CAAC,EAAD,CAApD;EAAA;EAAA,IAAOM,cAAP;EAAA,IAAuBC,iBAAvB;;EAEA,IAAMC,QAAQ,GAAG,aAAjB;EACA,IAAMC,IAAI,GAAG,YAAb;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,MACbJ,cAAc,IAAI,EADL;cAAA;cAAA;YAAA;;YAENK,aAFM,GAEU;cAClBF,IAAI,EAAEA,IADY;cAElBG,MAAM,EAAEJ,QAFU;cAGlBK,OAAO,EAAEP,cAHS;cAIlBQ,IAAI,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,OAArB;YAJY,CAFV;YAAA;YAAA,iCAQNf,MAAM,CAACgB,IAAP,CAAY,cAAZ,EAA4BP,aAA5B,CARM;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAApB;;EAYA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;IAC7BC,KAAK,CAAClB,MAAD,CAAL;IACAA,MAAM,CAACgB,IAAP,CAAY,WAAZ,EAAyBT,IAAzB;EACH,CAHD;;EAIF,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAACY,IAAI,EAAC,CAAN;MAASC,UAAU,EAAC;IAApB,CAAb;IAAA,WACE,MAAC,IAAD;MAAA,WACE,MAAC,IAAD;QAAA,qBAAab,IAAb;MAAA,EADF,EAEE,KAAC,MAAD;QAAQ,OAAO,EAAEU,kBAAjB;QAAqC,KAAK,EAAC;MAA3C,EAFF;IAAA,EADF,EAKE,KAAC,IAAD;MAAM,KAAK,EAAE;QAACE,IAAI,EAAC,CAAN;QAAQE,eAAe,EAAC,WAAxB;QAAqCC,KAAK,EAAC;MAA3C;IAAb,EALF,EAOE,MAAC,IAAD;MAAM,KAAK,EAAE;QAACC,aAAa,EAAC;MAAf,CAAb;MAAA,WACE,KAAC,SAAD;QAAW,WAAW,EAAC,kBAAvB;QAA0C,YAAY,EAAE,sBAACC,CAAD;UAAA,OAAOnB,iBAAiB,CAACmB,CAAD,CAAxB;QAAA,CAAxD;QAAqF,KAAK,EAAEpB;MAA5F,EADF,EAEE,KAAC,MAAD;QAAQ,KAAK,EAAC,cAAd;QAA6B,OAAO,EAAEI;MAAtC,EAFF;IAAA,EAPF;EAAA,EADF;AAcD"},"metadata":{},"sourceType":"module"}