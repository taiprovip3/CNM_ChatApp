{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isDisabled\", \"onPress\", \"textValue\"],\n    _excluded2 = [\"_text\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Text from \"../../primitives/Text\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Pressable } from \"../../primitives/Pressable\";\nimport { MenuContext } from \"./MenuContext\";\nimport { useMenuItem } from \"./useMenu\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar MenuItem = function MenuItem(_ref, ref) {\n  var children = _ref.children,\n      isDisabled = _ref.isDisabled,\n      _onPress = _ref.onPress,\n      textValue = _ref.textValue,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(MenuContext),\n      closeOnSelect = _React$useContext.closeOnSelect,\n      onClose = _React$useContext.onClose;\n\n  var menuItemRef = React.useRef(null);\n  var mergedRef = mergeRefs([menuItemRef, ref]);\n\n  var _usePropsResolution = usePropsResolution('MenuItem', props, {\n    isDisabled: isDisabled\n  }, {\n    cascadePseudoProps: true\n  }),\n      _text = _usePropsResolution._text,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      textContent = _React$useState2[0],\n      setTextContent = _React$useState2[1];\n\n  React.useEffect(function () {\n    var menuItem = menuItemRef.current;\n\n    if (menuItem) {\n      var _menuItem$textContent;\n\n      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : '').trim());\n    }\n  }, [children]);\n  var menuItemProps = useMenuItem({\n    textValue: textValue !== null && textValue !== void 0 ? textValue : textContent,\n    ref: menuItemRef\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Pressable, _extends({}, menuItemProps, resolvedProps, {\n    ref: mergedRef,\n    disabled: isDisabled,\n    accessibilityState: {\n      disabled: isDisabled\n    },\n    onPress: function onPress(e) {\n      if (!isDisabled) {\n        _onPress && _onPress(e);\n\n        if (closeOnSelect) {\n          onClose && onClose();\n        }\n      }\n    }\n  }), React.createElement(React.Fragment, null, React.Children.map(children, function (child, index) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return React.createElement(Text, _extends({}, _text, {\n        key: \"menu-item-\".concat(index)\n      }), child);\n    } else {\n      return child;\n    }\n  })));\n};\n\nexport default memo(forwardRef(MenuItem));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,IAAP;AACA,SAASC,kBAAT;AACA,SAASC,SAAT;AAEA,SAASC,WAAT;AACA,SAASC,WAAT;AACA,SAASC,SAAT;AACA,SAASC,qBAAT;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAEfC,GAFe,EAGZ;EAAA,IAFDC,QAEC,QAFDA,QAEC;EAAA,IAFSC,UAET,QAFSA,UAET;EAAA,IAFqBC,QAErB,QAFqBA,OAErB;EAAA,IAF8BC,SAE9B,QAF8BA,SAE9B;EAAA,IAF4CC,KAE5C;;EACH,wBAAmChB,KAAK,CAACiB,UAANjB,CAAiBM,WAAjBN,CAAnC;EAAA,IAAQkB,aAAR,qBAAQA,aAAR;EAAA,IAAuBC,OAAvB,qBAAuBA,OAAvB;;EACA,IAAMC,WAAW,GAAGpB,KAAK,CAACqB,MAANrB,CAAkB,IAAlBA,CAApB;EACA,IAAMsB,SAAS,GAAGd,SAAS,CAAC,CAACY,WAAD,EAAcT,GAAd,CAAD,CAA3B;;EACA,0BAAoCP,kBAAkB,CACpD,UADoD,EAEpDY,KAFoD,EAGpD;IACEH;EADF,CAHoD,EAMpD;IACEU,kBAAkB,EAAE;EADtB,CANoD,CAAtD;EAAA,IAAQC,KAAR,uBAAQA,KAAR;EAAA,IAAkBC,aAAlB;;EAUA,sBAAsCzB,KAAK,CAAC0B,QAAN1B,CAAe,EAAfA,CAAtC;EAAA;EAAA,IAAO2B,WAAP;EAAA,IAAoBC,cAApB;;EACA5B,KAAK,CAAC6B,SAAN7B,CAAgB,YAAM;IACpB,IAAM8B,QAAQ,GAAGV,WAAW,CAACW,OAA7B;;IACA,IAAID,QAAJ,EAAc;MAAA;;MACZF,cAAc,CAAC,0BAACE,QAAQ,CAACH,WAAV,yEAAyB,EAAzB,EAA6BK,IAA7B,EAAD,CAAdJ;IACD;EAJH,GAKG,CAAChB,QAAD,CALHZ;EAOA,IAAMiC,aAAa,GAAG1B,WAAW,CAAC;IAChCQ,SAAS,EAAEA,SAAF,SAAEA,aAAF,WAAEA,eAAaY,WADQ;IAEhChB,GAAG,EAAES;EAF2B,CAAD,CAAjC;;EAMA,IAAIX,qBAAqB,CAACO,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;;EACD,OACEhB,oBAACK,SAAD,eACM4B,aADN,EAEMR,aAFN;IAGEd,GAAG,EAAEW,SAHP;IAIEY,QAAQ,EAAErB,UAJZ;IAKEsB,kBAAkB,EAAE;MAClBD,QAAQ,EAAErB;IADQ,CALtB;IAQEC,OAAO,EAAGsB,kBAAD,EAAY;MACnB,IAAI,CAACvB,UAAL,EAAiB;QACfC,QAAO,IAAIA,QAAO,CAACsB,CAAD,CAAlBtB;;QACA,IAAII,aAAJ,EAAmB;UACjBC,OAAO,IAAIA,OAAO,EAAlBA;QACD;MACF;IACF;EAfH,IAiBEnB,0CACGA,KAAK,CAACqC,QAANrC,CAAesC,GAAftC,CAAmBY,QAAnBZ,EAA6B,UAACuC,KAAD,EAAQC,KAAR,EAAuB;IACnD,IAAI,OAAOD,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;MAC1D,OACEvC,oBAACG,IAAD,eAAUqB,KAAV;QAAiBiB,GAAG,sBAAeD,KAAf;MAApB,IACGD,KADH,CADF;IADF,OAMO;MACL,OAAOA,KAAP;IACD;EATF,EADH,CAjBF,CADF;AAlCF;;AAqEA,eAAerC,IAAI,CAACD,UAAU,CAACS,QAAD,CAAX,CAAnB","names":["React","forwardRef","memo","Text","usePropsResolution","Pressable","MenuContext","useMenuItem","mergeRefs","useHasResponsiveProps","MenuItem","ref","children","isDisabled","onPress","textValue","props","useContext","closeOnSelect","onClose","menuItemRef","useRef","mergedRef","cascadePseudoProps","_text","resolvedProps","useState","textContent","setTextContent","useEffect","menuItem","current","trim","menuItemProps","disabled","accessibilityState","e","Children","map","child","index","key"],"sources":["MenuItem.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../../primitives/Pressable';\nimport type { IMenuItemProps } from './types';\nimport { MenuContext } from './MenuContext';\nimport { useMenuItem } from './useMenu';\nimport { mergeRefs } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst MenuItem = (\n  { children, isDisabled, onPress, textValue, ...props }: IMenuItemProps,\n  ref: any\n) => {\n  const { closeOnSelect, onClose } = React.useContext(MenuContext);\n  const menuItemRef = React.useRef<any>(null);\n  const mergedRef = mergeRefs([menuItemRef, ref]);\n  const { _text, ...resolvedProps } = usePropsResolution(\n    'MenuItem',\n    props,\n    {\n      isDisabled,\n    },\n    {\n      cascadePseudoProps: true,\n    }\n  );\n  const [textContent, setTextContent] = React.useState('');\n  React.useEffect(() => {\n    const menuItem = menuItemRef.current;\n    if (menuItem) {\n      setTextContent((menuItem.textContent ?? '').trim());\n    }\n  }, [children]);\n\n  const menuItemProps = useMenuItem({\n    textValue: textValue ?? textContent,\n    ref: menuItemRef,\n  });\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Pressable\n      {...menuItemProps}\n      {...resolvedProps}\n      ref={mergedRef}\n      disabled={isDisabled}\n      accessibilityState={{\n        disabled: isDisabled,\n      }}\n      onPress={(e: any) => {\n        if (!isDisabled) {\n          onPress && onPress(e);\n          if (closeOnSelect) {\n            onClose && onClose();\n          }\n        }\n      }}\n    >\n      <>\n        {React.Children.map(children, (child, index: any) => {\n          if (typeof child === 'string' || typeof child === 'number') {\n            return (\n              <Text {..._text} key={`menu-item-${index}`}>\n                {child}\n              </Text>\n            );\n          } else {\n            return child;\n          }\n        })}\n      </>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(MenuItem));\n"]},"metadata":{},"sourceType":"module"}