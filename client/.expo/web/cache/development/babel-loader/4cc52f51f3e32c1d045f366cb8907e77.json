{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socket = io.connect(\"http://localhost:4000\");\nexport default function ChatScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentMessage = _useState2[0],\n      setCurrentMessage = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentUsername = _useState4[0],\n      setCurrentUsername = _useState4[1];\n\n  var room = 'templeRoom';\n\n  var joinRoomChatSimple = function joinRoomChatSimple() {\n    socket.emit(\"join_room\", room);\n  };\n\n  var sendMessage = function sendMessage() {\n    alert('OKE');\n\n    if (currentMessage != \"\") {\n      var objectMessage = {\n        room: room,\n        author: currentUsername,\n        message: currentMessage,\n        time: new Date(Date.now()).getTime()\n      };\n      socket.emit(\"send_message\", objectMessage);\n    }\n  };\n\n  useEffect(function () {\n    socket.on(\"receive_message\", function (data) {\n      console.log(data);\n    });\n  }, [socket]);\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    children: [_jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter your name...\",\n        onChangeText: function onChangeText(e) {\n          return setCurrentUsername(e);\n        },\n        value: currentUsername\n      }), _jsxs(Text, {\n        children: [\"Room: \", room]\n      }), _jsx(Button, {\n        onPress: joinRoomChatSimple,\n        title: \"Join room\"\n      })]\n    }), _jsx(View, {\n      style: {\n        flex: 1,\n        backgroundColor: 'lightgrey',\n        width: '100%'\n      }\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TextInput, {\n        placeholder: \"Enter message...\",\n        onChangeText: function onChangeText(e) {\n          return setCurrentMessage(e);\n        },\n        value: currentMessage\n      }), _jsx(Button, {\n        title: \"Send message\",\n        onPress: sendMessage\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","io","socket","connect","ChatScreen","navigation","currentMessage","setCurrentMessage","currentUsername","setCurrentUsername","room","joinRoomChatSimple","emit","sendMessage","alert","objectMessage","author","message","time","Date","now","getTime","on","data","console","log","flex","alignItems","e","backgroundColor","width","flexDirection"],"sources":["F:/Hoc ki 4/Cong nghe moi/AppChat/client/Components/screen/ChatScreen.js"],"sourcesContent":["import { View, Text, Button, TextInput } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { io } from 'socket.io-client';\r\n\r\nconst socket = io.connect(\"http://localhost:4000\");\r\n\r\nexport default function ChatScreen({ navigation }) {\r\n\r\n    const [currentMessage, setCurrentMessage] = useState('');\r\n    const [currentUsername, setCurrentUsername] = useState('');\r\n    \r\n    const room = 'templeRoom';\r\n\r\n    //Join room\r\n    const joinRoomChatSimple = () => {\r\n        socket.emit(\"join_room\", room);\r\n    }\r\n\r\n    //Send message\r\n    const sendMessage = () => {\r\n        alert('OKE');\r\n        if(currentMessage != \"\") {\r\n            const objectMessage = {\r\n                room: room,\r\n                author: currentUsername,\r\n                message: currentMessage,\r\n                time: new Date(Date.now()).getTime()\r\n            }\r\n            socket.emit(\"send_message\", objectMessage);\r\n        }\r\n    }\r\n\r\n    //Listening message\r\n    useEffect(() => {\r\n        socket.on(\"receive_message\", (data) => {\r\n            console.log(data);\r\n        });\r\n    }, [socket]);\r\n    \r\n\r\n  return (\r\n    <View style={{flex:1, alignItems:'center'}}>\r\n      <View>\r\n        <TextInput placeholder='Enter your name...' onChangeText={(e) => setCurrentUsername(e)} value={currentUsername} />\r\n        <Text>Room: {room}</Text>\r\n        <Button onPress={joinRoomChatSimple} title='Join room' />\r\n      </View>\r\n      <View style={{flex:1,backgroundColor:'lightgrey', width:'100%'}}>\r\n      </View>\r\n      <View style={{flexDirection:'row'}}>\r\n        <TextInput placeholder='Enter message...' onChangeText={(e) => setCurrentMessage(e)} value={currentMessage} />\r\n        <Button title='Send message' onPress={sendMessage}/>\r\n      </View>\r\n    </View>\r\n  )\r\n}"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,EAAT,QAAmB,kBAAnB;;;AAEA,IAAMC,MAAM,GAAGD,EAAE,CAACE,OAAH,CAAW,uBAAX,CAAf;AAEA,eAAe,SAASC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EAE/C,gBAA4CL,QAAQ,CAAC,EAAD,CAApD;EAAA;EAAA,IAAOM,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAA8CP,QAAQ,CAAC,EAAD,CAAtD;EAAA;EAAA,IAAOQ,eAAP;EAAA,IAAwBC,kBAAxB;;EAEA,IAAMC,IAAI,GAAG,YAAb;;EAGA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;IAC7BT,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyBF,IAAzB;EACH,CAFD;;EAKA,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBC,KAAK,CAAC,KAAD,CAAL;;IACA,IAAGR,cAAc,IAAI,EAArB,EAAyB;MACrB,IAAMS,aAAa,GAAG;QAClBL,IAAI,EAAEA,IADY;QAElBM,MAAM,EAAER,eAFU;QAGlBS,OAAO,EAAEX,cAHS;QAIlBY,IAAI,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,EAAqBC,OAArB;MAJY,CAAtB;MAMAnB,MAAM,CAACU,IAAP,CAAY,cAAZ,EAA4BG,aAA5B;IACH;EACJ,CAXD;;EAcAhB,SAAS,CAAC,YAAM;IACZG,MAAM,CAACoB,EAAP,CAAU,iBAAV,EAA6B,UAACC,IAAD,EAAU;MACnCC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACH,CAFD;EAGH,CAJQ,EAIN,CAACrB,MAAD,CAJM,CAAT;EAOF,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAACwB,IAAI,EAAC,CAAN;MAASC,UAAU,EAAC;IAApB,CAAb;IAAA,WACE,MAAC,IAAD;MAAA,WACE,KAAC,SAAD;QAAW,WAAW,EAAC,oBAAvB;QAA4C,YAAY,EAAE,sBAACC,CAAD;UAAA,OAAOnB,kBAAkB,CAACmB,CAAD,CAAzB;QAAA,CAA1D;QAAwF,KAAK,EAAEpB;MAA/F,EADF,EAEE,MAAC,IAAD;QAAA,qBAAaE,IAAb;MAAA,EAFF,EAGE,KAAC,MAAD;QAAQ,OAAO,EAAEC,kBAAjB;QAAqC,KAAK,EAAC;MAA3C,EAHF;IAAA,EADF,EAME,KAAC,IAAD;MAAM,KAAK,EAAE;QAACe,IAAI,EAAC,CAAN;QAAQG,eAAe,EAAC,WAAxB;QAAqCC,KAAK,EAAC;MAA3C;IAAb,EANF,EAQE,MAAC,IAAD;MAAM,KAAK,EAAE;QAACC,aAAa,EAAC;MAAf,CAAb;MAAA,WACE,KAAC,SAAD;QAAW,WAAW,EAAC,kBAAvB;QAA0C,YAAY,EAAE,sBAACH,CAAD;UAAA,OAAOrB,iBAAiB,CAACqB,CAAD,CAAxB;QAAA,CAAxD;QAAqF,KAAK,EAAEtB;MAA5F,EADF,EAEE,KAAC,MAAD;QAAQ,KAAK,EAAC,cAAd;QAA6B,OAAO,EAAEO;MAAtC,EAFF;IAAA,EARF;EAAA,EADF;AAeD"},"metadata":{},"sourceType":"module"}